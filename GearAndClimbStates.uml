@startuml

'''''states

idle : Natural idle state when\n no commands are running

ClawReferenceImage: <img:/Claw20170121_resized.JPG>
ClimberReferenceImage: <img:/Climber_resized.JPG>

state Climb {

readyToClimb: "driveMotors=humanControl"
readyToClimb: climbMotors=goStop

climbMotorsOn: driveMotors=humanControl
climbMotorsOn: climbMotors= <b>goAtEngageSpeed
 
driveIntoRope: driveMotors=humanControl
driveIntoRope: climbMotors=goAtEngageSpeed 

climb: driveMotors= <b>goStop
climb: climbMotors= <b>goAtClimbSpeed

stopClimb: driveMotors= goStop
stopClimb: climbMotors= <b>goStopped

}

state HarvestGear {

	safeModeWithoutGear : clawPos=GoUp
	safeModeWithoutGear : armPos=GoClose
	safeModeWithoutGear : pusherPos=GoRetract
	safeModeWithoutGear : rollers=SpinStop
	
	harvestMode : <b>clawPos=GoDown
	harvestMode : <b>armPos=GoOpen
	harvestMode : pusherPos=GoRetract
	harvestMode : <b>rollers=SpinIn
	
	gearClamp : clawPos=GoDown
	gearClamp : <b>armPos=GoClose
	gearClamp : pusherPos=GoRetract
	gearClamp : <b>rollers=SpinStop
	
	raisingClaw : <b>clawPos=GoUp
	raisingClaw : armPos=GoClose
	raisingClaw : pusherPos=GoRetract
	raisingClaw : rollers=SpinStop
	
	safeModeWithGear : clawPos=GoUp
	safeModeWithGear : armPos=GoClose
	safeModeWithGear : pusherPos=GoRetract
	safeModeWithGear : rollers=SpinStop
	
	abortRaisingClaw : <b>clawPos=GoDown
	abortRaisingClaw : armPos=GoClose
	abortRaisingClaw : pusherPos=GoRetract
	abortRaisingClaw : rollers=SpinStop

}

state ScoreGear {

	moveToPeg : visionTracking/squaringUp
	
	placeGear : clawPos=GoUp
	placeGear : armPos=GoOpen
	placeGear : pusherPos=GoExtend
	placeGear : rollers=SpinStop
	
	returnToStart : clawPos=GoUp
	returnToStart : armPos=GoOpen
	returnToStart : <b>pusherPos=GoRetract
	returnToStart : rollers=SpinStop
	
	gearScored : clawPos=GoUp
	gearScored : armPos=GoOpen
	gearScored : pusherPos=GoRetract
	gearScored : rollers=SpinStop

}

state ReleaseGear {

	unHarvest : clawPos=GoUp
	unHarvest : armPos=GoClose
	unHarvest : pusherPos=GoRetract
	unHarvest : rollers=SpinStop

	readyToRelease : <b>clawPos=GoDown
	readyToRelease : armPos=GoClose
	readyToRelease : pusherPos=GoRetract
	readyToRelease : rollers=SpinStop

	regurgitateGear : clawPos=GoDown
	regurgitateGear : <b>armPos=GoOpen
	regurgitateGear : pusherPos=GoRetract
	regurgitateGear : <b>rollers=SpinOut
	
	returnToPosition : <b>clawPos=GoUp
	returnToPosition : <b>armPos=GoClose
	returnToPosition : pusherPos=GoRetract
	returnToPosition : <b>rollers=SpinStop

	safeModeResume : clawPos=GoUp
	safeModeResume : armPos=GoClose
	safeModeResume : pusherPos=GoRetract
	safeModeResume : rollers=SpinStop

}

'''''transitions

idle -left-> ScoreGear: Score Button Pressed
idle -down-> HarvestGear: Harvest Button Pressed 
idle -up-> ReleaseGear: Release Button Pressed
idle -right-> Climb: Climb Button Pressed

Climb -right-> ClimberReferenceImage
ScoreGear -left-> ClawReferenceImage

readyToClimb -down-> climbMotorsOn: doClimbSequence

climbMotorsOn -down-> driveIntoRope: timeDelay= 0.5

driveIntoRope -down-> climb: climbMotors=isEngagedWithRope

climb -down-> stopClimb: climbMotors=isEngagedWithTouchPad

safeModeWithoutGear -right-> harvestMode: doGearSequence

harvestMode -right-> gearClamp: whenGearIsAccquired

gearClamp -left-> harvestMode: whenGearIsNotAccquired

gearClamp -right-> raisingClaw: timeDelay &\n whenGearIsAccquired

raisingClaw -down-> abortRaisingClaw: doAbort

raisingClaw -right-> safeModeWithGear: clawPos=IsUp

moveToPeg -down-> placeGear: doPlaceGearSequence

placeGear -down-> returnToStart: timeDelay &\n whenGearIsNotAccquired

returnToStart -down-> gearScored: pusherPos=IsRetracted

gearScored -down-> placeGear: retry?

unHarvest -right-> readyToRelease: doDropGearSequence

readyToRelease -right-> regurgitateGear: clawPos=IsDown

regurgitateGear -right-> returnToPosition: timeDelay &\n whenGearIsNotAccquired

returnToPosition -right-> safeModeResume: clawPos=IsUp\n armPos=IsClosed\n rollers=IsStopped

@enduml